name: Release

on:
  release:
    types: [created]

jobs:
  release:
    name: Release ${{ matrix.target }}
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            archive: tar.gz 
          - target: x86_64-apple-darwin
            archive: tar.gz
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Compile and Release
        uses: rust-build/rust-build.action@v1.4.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          RUSTTARGET: ${{ matrix.target }}
          ARCHIVE_TYPES: ${{ matrix.archive }}
          TOOLCHAIN_VERSION: stable

  macos-arm-release:
    name: Release Mac OS ARM
    runs-on: macos-12
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install and Build
        run: |
          rustup toolchain install stable-aarch64-apple-darwin
          rustup target add aarch64-apple-darwin
          cargo build --release --target aarch64-apple-darwin

      - name: Create Tar Archive
        run: tar --directory=target/aarch64-apple-darwin/release -cf archive.tar.gz crime-report

      - name: Upload Release
        run: |
          id=$(gh api -H "Accept: application/vnd.github+json" /repos/jborkowski/crime-report/releases/tags/${{ github.ref_name }} --jq .id)
          curl --fail-with-body -sS  -X POST --data-binary @"archive.tar.gz" -H 'Content-Type: application/octet-stream' -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://uploads.github.com/repos/jborkowski/crime-report/releases/$id/assets?name=crime-report_${{ github.ref_name }}_aarch64-apple-darwin.tar.gz"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


